# -*- coding: utf-8 -*-
"""4.1.3 Melnbalts, vidējais kolonnā, atlikumi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1RdZnUR6NuFXjOujeHoJTY5J-QBeP8s3M
"""

!pip install music21;

#tiek ieimportētas nepieciešamās bibliotēkas
from music21 import converter, instrument, note, chord, stream
from google.colab import files
import matplotlib.pyplot as plt
import numpy as np

Cmaj = {
  0 : 0, #C
  1 : 2, #D
  2 : 4, #E
  3 : 5, #F
  4 : 7, #G
  5 : 9, #A
  6 : 11 #B
}

#funkcija nošu un MIDI faila veidošana
def create_music (arr, fn, download=True, printMIDI=False):
  output_notes = []
  offset = 0
  
  #tiek veidoti nošu objekti katrai masīva vērtībai, nots augstumu nosakot vārdnīcas Cmaj palīdzību
  #parametrs quarterLenght apzīmē nots garumu ceturtdaļās
  #offset ir nots atskaņošanas laiks attiecībā pret sākumu
  for px in arr:
    new_note = note.Note(Cmaj[px], quarterLength=0.5)
    new_note.offset = offset
    new_note.storedInstrument = instrument.Piano()
    output_notes.append(new_note)
    
    #palielina offset katrā iterācijā, lai notis nepārklājas
    offset += 0.5

  #ģenerēto nošu informācija tiek ierakstīta failā    
  midi_stream = stream.Stream(output_notes)
  midi_stream.write('midi', fp='{name}_413atl.mid'.format(name=fn.split('.')[0]))

  #ģenerēto nošu izprintēšana
  if printMIDI == 1:
    for element in midi_stream:
      print(element.nameWithOctave, element.offset)

  #ģenerētā MIDI faila lejuplāde
  if download == 1:
    files.download('{name}_413atl.mid'.format(name=fn.split('.')[0]))
  return

#attēla augšupielāde
uploaded = files.upload()

#tiek nolasīts faila nosaukums un pats attēls
filename = list(uploaded.keys())[0]
uploaded_picture=plt.imread(filename)

#tiek iegūts attēla augstums un platums
height = uploaded_picture.shape[0]
width = uploaded_picture.shape[1]

#attēls tiek apstaigāts pa pikseļu kolonnām, aprēķinot katrai vidējo krāsas vērtību (1 krāsas slānim)
#pie viena katrai vidējai vērtībai teik veika atlikuma iegūšana, dalot ar 7
uploaded_picture_bw_mod = []
for i in range(width):
  uploaded_picture_bw_mod.append(np.average(uploaded_picture[0:height,i:i+1,0]).round()%7)

#iegūtais vidējo vērtību masīvs tiek padots mūzikas ģenerēšanas fjai
create_music(uploaded_picture_bw_mod, filename, 1, 1)

#iespēja attēlot attēlu, ja vajag
plt.imshow(uploaded_picture);